name: tests

on: [ push ]

jobs:
  tests:
    name: Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ 3.8, 3.9 ]
    services:
      postgres:
        image: postgis/postgis:13-3.1
        env:
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: test_database
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Restore cached dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('setup.py') }}
          restore-keys: ${{ runner.os }}-pip-${{ matrix.python-version }}-
      - name: Update pip
        run: python -m pip install --upgrade pip
      - name: Install dependencies
        run: |
          pip install wheel
          pip install -e .[testing]
          sudo apt install libsqlite3-mod-spatialite
          sudo ln -sf /usr/lib/x86_64-linux-gnu/mod_spatialite.so /usr/lib/x86_64-linux-gnu/mod_spatialite
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with coverage
        env:
          POSTGRES_HOSTNAME: localhost
          POSTGRES_DATABASE: test_database
          POSTGRES_USERNAME: postgres
          POSTGRES_PASSWORD: test_password
        run: pytest --cov=tablecrow
      - name: Upload coverage to Codecov
        if: matrix.python-version == 3.9
        uses: codecov/codecov-action@v1
        with:
          flags: python${{ matrix.python-version }}-${{ runner.os }}
          fail_ci_if_error: true